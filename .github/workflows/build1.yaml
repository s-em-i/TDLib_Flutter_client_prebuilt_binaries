name: build1

on:
  workflow_dispatch:
  
permissions:
  actions: write
  contents: read
  
jobs:
  build1:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          
      - name: clone TD lib and compare versions
        run: |
          LatestPrebuiltReleasedVersionTag=$(git describe --tags --abbrev=0 | sed 's/v//')
          echo $LatestPrebuiltReleasedVersionTag
          
          git clone https://github.com/tdlib/td.git
          cd td
            LastReleasedVersionTag=$(git log -n 1 --grep="Update version to " --oneline)
            commit_hash=$(echo "$LastReleasedVersionTag" | awk '{print $1}')
            version=$(echo "$LastReleasedVersionTag" | grep -o '[0-9]\+\.[0-9]\+\.[0-9]\+\.' | sed 's/\.$//')
            echo "$version"

            echo "UPDATE_TDLIB=false" >> $GITHUB_ENV

            if [[ $(echo -e "$version\n$LatestPrebuiltReleasedVersionTag" | sort -V | head -n1) == "$LatestPrebuiltReleasedVersionTag" ]]; then
              git checkout $commit_hash
              echo "version=$version" >> $GITHUB_ENV
              echo "commit_hash=$commit_hash" >> $GITHUB_ENV
              echo "commit_message=$commit_hash Update version to $version" >> $GITHUB_ENV
              echo "UPDATE_TDLIB=true" >> $GITHUB_ENV
            fi
          cd -

      - name: Trigger next Workflow per CLI
        if: env.UPDATE_TDLIB == 'true'
        run: |
          RUN_ID="${{ github.run_id }}"
          gh workflow run .github/workflows/build2.yaml --field commit_hash="$commit_hash" --field version="$version" --field UPDATE_TDLIB="$UPDATE_TDLIB" --field RUN_IDS="$RUN_ID" --ref ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Create Zip Files Build 1
        if: env.UPDATE_TDLIB == 'true'
        run: |
          mkdir artifacts && ARTIFACT_DIR="${PWD}/artifacts"
          echo "ARTIFACT_DIR=$ARTIFACT_DIR" >> $GITHUB_ENV
          
          wget -O "$ARTIFACT_DIR/build1_01.zip" https://zlib.net/fossils/zlib-1.3.1.tar.gz
          wget -O "$ARTIFACT_DIR/build1_02.zip" https://zlib.net/fossils/zlib-1.3.1.tar.gz
          wget -O "$ARTIFACT_DIR/build1_03.zip" https://zlib.net/fossils/zlib-1.3.1.tar.gz

      - name: Upload To Artifacts Dir
        if: env.UPDATE_TDLIB == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: ArtifactsDir
          path: ${{ env.ARTIFACT_DIR }}/*.zip
          retention-days: 1
