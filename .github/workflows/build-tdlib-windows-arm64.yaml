name: tdlib-build-windows-arm64
on:
  workflow_dispatch:
    inputs:
      commit_hash:
        description: 'Commit Hash'
        required: true
        type: string
      version:
        description: 'Version'
        required: true
        type: string
      UPDATE_TDLIB:
        description: 'UPDATE_TDLIB'
        required: true
        type: string
        default: 'false'
      RUN_IDS:
        description: 'RUN_IDS'
        required: true
        type: string
permissions:
  actions: write
  contents: read
jobs:
  build-tdlib-windows-arm64:
    runs-on: windows-11-arm
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0
          fetch-tags: true
          
      - name: Parse Inputs in GITHUB_ENV
        shell: bash
        run: |
          echo "commit_hash=${{ inputs.commit_hash }}" >> $GITHUB_ENV
          echo "version=${{ inputs.version }}" >> $GITHUB_ENV
          echo "UPDATE_TDLIB=${{ inputs.UPDATE_TDLIB }}" >> $GITHUB_ENV
          echo "RUN_IDS=${{ inputs.RUN_IDS }}" >> $GITHUB_ENV

      - name: Trigger next Workflow per CLI
        if: ${{ env.UPDATE_TDLIB == 'true' }}
        shell: bash
        run: |
          RUN_ID="${{ github.run_id }}"
          RUN_IDS="$RUN_IDS,$RUN_ID"
          gh workflow run .github/workflows/build-tdlib-macos-universal.yaml \
          --field commit_hash="$commit_hash" \
          --field version="$version" \
          --field UPDATE_TDLIB="$UPDATE_TDLIB" \
          --field RUN_IDS="$RUN_IDS" \
          --ref ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: JSON to variables
        if: ${{ env.UPDATE_TDLIB == 'true' }}
        uses: rgarcia-phi/json-to-variables@v1.1.0
        with:
          filename: '.github/workflows/td-version.json'
          prefix: tdbuild_versions

      - name: Clone TDLib and get Host Arch
        if: ${{ env.UPDATE_TDLIB == 'true' }}
        shell: pwsh
        run: |
          git clone https://github.com/tdlib/td.git
          cd td 
            git checkout $commit_hash            
          
            $systemType = (Get-CimInstance Win32_ComputerSystem).SystemType
            $realArch = [System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture.ToString().ToLower()
        
            if ($systemType -like "*ARM64*") {
              Write-Host "Running on actual ARM64 hardware (emulated x64 shell)"
              $HOST_ARCH = "aarch64"
            } else {
              $HOST_ARCH = $realArch
            }
            
            Add-Content -Path $env:GITHUB_ENV -Value "HOST_ARCH=$HOST_ARCH"          

      - name: Install vcpkg arm64
        if: ${{ env.UPDATE_TDLIB == 'true' }}
        shell: pwsh
        run: |

          $BITNESS = "arm64"
          New-Item -ItemType Directory -Force -Path artifacts | Out-Null
          $ARTIFACT_DIR = Join-Path $PWD "artifacts"
      
          Write-Host "ARTIFACT_DIR=$ARTIFACT_DIR"
          Add-Content -Path $env:GITHUB_ENV -Value "ARTIFACT_DIR=$ARTIFACT_DIR"
          Add-Content -Path $env:GITHUB_ENV -Value "BITNESS=$BITNESS"
      
          # vcpkg setup
          cd td
            git clone https://github.com/Microsoft/vcpkg.git
            cd vcpkg
              git checkout bc3512a509f9d29b37346a7e7e929f9a26e66c7e
              ./bootstrap-vcpkg.bat
              ./vcpkg.exe install gperf:$BITNESS-windows openssl:$BITNESS-windows zlib:$BITNESS-windows       
      
      - name: Build TDLib Windows arm64 Release
        if: ${{ env.UPDATE_TDLIB == 'true' }}
        shell: pwsh
        run: |
          cd td
            $buildType = "Release"
            $system = "Windows"
        
            Write-Host "Building TDLib for $system $($env:HOST_ARCH) $buildType"
        
            $tdlibDir = Join-Path $PWD "tdlib"
            $tdlibZip = "tdlib-$system-$($env:HOST_ARCH)-$buildType-$($env:version).zip"
            $tdlibFiles = "tdlib/bin"
        
            Remove-Item -Path $tdlibDir -Recurse -Force -ErrorAction SilentlyContinue
            Remove-Item -Path build -Recurse -Force -ErrorAction SilentlyContinue
            New-Item -ItemType Directory -Path build -Force | Out-Null
            cd build
              cmake -A $env:BITNESS -DCMAKE_INSTALL_PREFIX:PATH=$tdlibDir -DCMAKE_TOOLCHAIN_FILE:FILEPATH=../vcpkg/scripts/buildsystems/vcpkg.cmake ..
          
              $parallelJobs = [Environment]::ProcessorCount
              cmake --build . --parallel $parallelJobs --target install --config $buildType        
            cd ..
        
          $ARTIFACT_DIR = ($env:ARTIFACT_DIR).Replace('\', '/')
          Write-Host "Compressing to $ARTIFACT_DIR/$tdlibZip $tdlibFiles/*"
          jar -cMf $ARTIFACT_DIR/$tdlibZip $tdlibFiles/*

      - name: Build TDLib Windows arm64 Debug
        if: ${{ env.UPDATE_TDLIB == 'true' }}
        shell: pwsh
        run: |
          cd td
            $buildType = "Debug"
            $system = "Windows"
        
            Write-Host "Building TDLib for $system $($env:HOST_ARCH) $buildType"
        
            $tdlibDir = Join-Path $PWD "tdlib"
            $tdlibZip = "tdlib-$system-$($env:HOST_ARCH)-$buildType-$($env:version).zip"
            $tdlibFiles = "tdlib/bin"
        
            Remove-Item -Path $tdlibDir -Recurse -Force -ErrorAction SilentlyContinue
            Remove-Item -Path build -Recurse -Force -ErrorAction SilentlyContinue
            New-Item -ItemType Directory -Path build -Force | Out-Null
            cd build
              cmake -A $env:BITNESS -DCMAKE_INSTALL_PREFIX:PATH=$tdlibDir -DCMAKE_TOOLCHAIN_FILE:FILEPATH=../vcpkg/scripts/buildsystems/vcpkg.cmake ..
          
              $parallelJobs = [Environment]::ProcessorCount
              cmake --build . --parallel $parallelJobs --target install --config $buildType        
            cd ..
        
          $ARTIFACT_DIR = ($env:ARTIFACT_DIR).Replace('\', '/')
          Write-Host "Compressing to $ARTIFACT_DIR/$tdlibZip $tdlibFiles/*"
          jar -cMf $ARTIFACT_DIR/$tdlibZip $tdlibFiles/*
            
      - name: Upload To Artifacts Dir
        if: ${{ env.UPDATE_TDLIB == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: ArtifactsDir
          path: artifacts/*.zip
          retention-days: 1
